name: install-godot-binary
description: "Installs the Godot Runtime"

inputs:
  godot-version:
    description: "The Godot engine version"
    type: string
    required: true
  godot-status-version:
    description: "The Godot engine status version"
    type: string
    required: true
  godot-mono:
    required: false
    type: boolean
    default: false
  godot-bin-name:
    type: string
    required: true
  godot-cache-path:
    type: string
    required: true


runs:
  using: composite
  steps:

    - name: Set Cache Name
      shell: bash
      run: |
        if ${{inputs.godot-mono == 'true'}}; then
            echo "CACHE_NAME=${{ runner.OS }}-Godot_v${{ inputs.godot-version }}-${{ inputs.godot-status-version }}_mono" >> "$GITHUB_ENV"
        else
            echo "CACHE_NAME=${{ runner.OS }}-Godot_v${{ inputs.godot-version }}-${{ inputs.godot-status-version }}" >> "$GITHUB_ENV"
        fi
        echo 'CACHE_NAME is $CACHE_NAME'

    - name: "Cache Godot Binary Download"
      uses: actions/cache@v3
      id: godot-cache-binary
      with:
        path: ${{ inputs.godot-cache-path }}
        key: ${{ env.CACHE_NAME }}
        restore-keys: ${{ env.CACHE_NAME }}

    - name: "Install Linux Godot ${{ inputs.godot-version }}"
      if: steps.godot-cache-binary.outputs.cache-hit != 'true'
      continue-on-error: false
      shell: bash
      run: |
        mkdir -p ${{ inputs.godot-cache-path }}
        chmod 770 ${{ inputs.godot-cache-path }}
        DIR="$HOME/.config/godot"
        if [ ! -d "$DIR" ]; then
          mkdir -p "$DIR"
          chmod 770 "$DIR"
        fi

        GODOT_PACKAGE=Godot_v${{ inputs.godot-version }}-${{ inputs.godot-status-version }}_${{ inputs.godot-bin-name }}.zip
        GODOT_BIN=Godot_v${{ inputs.godot-version }}-${{ inputs.godot-status-version }}_${{ inputs.godot-bin-name }}
        if ${{inputs.godot-mono == 'true'}}; then
          GODOT_PACKAGE=mono/Godot_v${{ inputs.godot-version }}-${{ inputs.godot-status-version }}_mono_${{ inputs.godot-bin-name }}.zip
          GODOT_BIN=mono/Godot_v${{ inputs.godot-version }}-${{ inputs.godot-status-version }}_mono_${{ inputs.godot-bin-name }}
        fi

        echo $GODOT_PACKAGE
        echo $GODOT_BIN

        wget https://downloads.tuxfamily.org/godotengine/${{ inputs.godot-version }}/$GODOT_PACKAGE -P ${{ inputs.godot-cache-path }}
        unzip ${{ inputs.godot-cache-path }}/$GODOT_PACKAGE -d ${{ inputs.godot-cache-path }}
        if ${{runner.OS == 'Linux'}}; then
          echo "Run linux part"
          mv ${{ inputs.godot-cache-path }}/$GODOT_BIN ${{ inputs.godot-cache-path }}/godot
          chmod u+x ${{ inputs.godot-cache-path }}/godot
          echo "${{ inputs.godot-cache-path }}/godot"
        else
          echo "Run windows part"
          pwd
          mv ${{ inputs.godot-cache-path }}/$GODOT_BIN ${{ inputs.godot-cache-path }}/godot.exe
          chmod u+x ${{ inputs.godot-cache-path }}/godot.exe
          ${{ inputs.godot-cache-path }}/godot.exe --version
          echo "${{ inputs.godot-cache-path }}/godot.exe"
        fi
        ls -lsR ${{ inputs.godot-cache-path }}
